<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:cobtext="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                          http://www.springframework.org/schema/context http://www.springframework.org/schema/beans/spring-context.xsd">
    <!--如果有大量的属性 则需要引入外部 属性 文件-->
    <!--    1.配置德鲁伊(druid)jar包连接池-->
    <!--    2.引入德鲁伊连接池依赖jar包-->

    <!--    配置连接池方式一-->

    <!--   1. 直接配置连接池-->
    <!--    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">-->
    <!--1.配置驱动 2.连接数据库 3.用户名 4.密码-->
    <!--        <property name="driverClassName" value="com.mysql.jdbc.Driver"></property>-->
    <!--        <property name="url" value="jdbc:mysql://localhost:336/user"></property>-->
    <!--        <property name="username" value="root"></property>-->
    <!--        <property name="password" value="root"></property>-->
    <!--    </bean>-->

    <!--    配置连接池方式二-->
    <!--  2.引入外部属性文件配置数据库连接池  -->
    <!--    （1）创建外部属性文件，properties格式文件，写数据信息-->
    <!--    配置 *context空间 -->
    <!--    在spring配置文件使用标签引入外部属性文件-->
    <!--    引入外部属性文件-->
    <!--    classpath:必须在src文件下-->
    <cobtext:property-placeholder location="classpath:jdbc.properties"/>
    <!--    配置连接池-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <!--       通过key获取文件中的value-->
        <property name="driverClassName" value="${prop.driverClass}"></property>
        <property name="url" value="${prop.url}"></property>
        <property name="username" value="{prop.userName}"></property>
        <property name="password" value="{prop.password}"></property>
    </bean>
</beans>