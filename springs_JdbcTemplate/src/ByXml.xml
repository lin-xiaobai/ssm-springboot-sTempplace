<?xml version="1.0" encoding="UTF-8"?>

<!--使用xml文件 进行事务管理-->


<!--       引入context空间-->
<!--配置事务 tx空间-->
<beans xmlns="http://www.springframework.org/schema/beans"

       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"

       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"


       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
         http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">
    <!--    开启组件扫描，扫描出spring框架中的配置注解-->
    <context:component-scan base-package="com.spring5.bank"></context:component-scan>

    <!--&lt;!&ndash;    配置连接池 引入外部配置文件   classpath:必须在src文件下&ndash;&gt;&ndash;&gt;-->
    <context:property-placeholder location="classpath:bank.properties"/>
    <!--    数据连接-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driverClass}"></property>
        <property name="url" value="${jdbc.url}"></property>
        <property name="username" value="${jdbc.userName}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>

    <!--    配置jdbcTemplate对象，注入DataSource-->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!--    在配置文件中配置事务管理器-->
    <!--    1.创建事务管理器对象-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--        注入数据源-->
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <!--2.配置通知  advice：通知-->
    <tx:advice id="txadvice">
        <!--        配置事务参数  attributes:属性-->
        <tx:attributes>
            <!--            指定哪种规则的方法上面添加事务 name的属性值是方法的名称
            propagation:添加事务的管理操作  propagation：规定 事务的传播行为-->
            <tx:method name="count" propagation="REQUIRED"/>

            <!--            这个是指定前缀名为count的方法名称-->
            <!--            <tx:method name="count*"/>-->
        </tx:attributes>
    </tx:advice>

    <!--    3.配置切入点和切面-->
    <aop:config>
        <!--        配置切入点-->
        <!--        expression:填入 表达式-->
        <!--      .*指的是所有的方法   .. 代表全部参数-->
        <aop:pointcut id="pt" expression="execution(* com.spring5.bank.service.*(..))"/>
        <!--        配置切面-->
        <!--        第一个是通知 第二个是切入点-->
        <!--        意思是：在切入点的上面添加 通知（事务操作）-->
        <aop:advisor advice-ref="txadvice" pointcut-ref="pt"/>
    </aop:config>


</beans>