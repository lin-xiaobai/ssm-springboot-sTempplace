<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"

       xmlns:context="http://www.springframework.org/schema/context"

       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
">

    <!--    组件扫描-->
    <context:component-scan base-package="com.spring5.jdbcTemplate">
    </context:component-scan>

    <!--    配置连接池-->
    <!--  2.引入外部属性文件配置数据库连接池  -->
    <!--    （1）创建外部属性文件，properties格式文件，写数据信息-->
    <!--    配置 *context空间 -->
    <!--    在spring配置文件使用标签引入外部属性文件-->
    <!--    引入外部属性文件-->
    <!--    classpath:必须在src文件下-->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    <!--    数据库连接池-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driverClass}"></property>
        <property name="url" value="${jdbc.url}"></property>
        <property name="username" value="${jdbc.userName}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>

    <!--    配置jdbcTemplate对象，注入DataSource-->
    <!--    创建jdbcTemplate对象-->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <!--        注入上面的连接池的id 属性：dataSource-->
        <property name="dataSource" ref="dataSource"></property>
    </bean>
</beans>