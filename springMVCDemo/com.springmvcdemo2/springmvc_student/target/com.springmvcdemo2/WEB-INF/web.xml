<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">
    <!--   设置 编码过滤器  需要在 HiddenHttpMethodFilter过滤器 的前面 不然的话编码过滤器不起作用
 理由:在 设置编码过滤器 前 不能 获取 任何的请求方式 在配置 HiddenHttpMethodFilter过滤器时会获取 _method请求参数-->
    <!--    在 设置编码过滤器，设置post请求中不乱码-->
    <filter>
        <filter-name>characterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceResponseEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>characterEncodingFilter</filter-name>
        <!--        /*表示所有的请求-->
            <url-pattern>/*</url-pattern>
        </filter-mapping>



<!--    <filter>-->
<!--        <filter-name>HiddenHttpMethodFilter</filter-name>-->
<!--        <filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>-->
<!--    </filter>-->
<!--    <filter-mapping>-->
<!--        <filter-name>HiddenHttpMethodFilter</filter-name>-->
<!--        <url-pattern>/*</url-pattern>-->
<!--    </filter-mapping>-->

    <!--  默认的配置方式：位置默认，名称默认  配置springmvc的前端控制器，对浏览器发送的请求进行统一处理-->
    <servlet>
        <servlet-name>DispatcherServlet</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <!-- springmvc:扩展方式配置 配置springMVC配置文件的位置和名称-->
        <init-param>
            <!--            上下文配置路径-->
            <param-name>contextConfigLocation</param-name>
            <!--         类路径下即在src目录下   -->
            <param-value>classpath:springmvc.xml</param-value>
        </init-param>
        <!--        设置servlet初始化-->
        <!--        将springMVC的前端控制器DispatcherServlet的初始化时间提前到服务器启动时间-->
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>DispatcherServlet</servlet-name>
        <!--   /:表示当前浏览器发送的所有请求，不包括jsp后缀的文件
          设置springMVC的核心控制器所能处理的请求的请求路径-->
        <url-pattern>/</url-pattern>
    </servlet-mapping>
</web-app>